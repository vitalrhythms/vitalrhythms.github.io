var NewSessionData = (function () {
    var _DeviceInfoDetector = (function () {
        var deviceInfo = {};

        var detect = function (options) {
            // ViewportSize
            var offsetWidth = options && options.offsetWidth;
            var offsetHeight = options && options.offsetHeight;
            deviceInfo.viewportSize = getViewportSize(offsetWidth, offsetHeight);

            // ScreenSize
            deviceInfo.screenSize = [window.screen.availWidth, window.screen.availHeight];

            // Orientation
            deviceInfo.orientation = getOrientation();

            // devicePixelRatio && ppi
            deviceInfo.devicePixelRatio = window.devicePixelRatio;
            deviceInfo.ppi = getPPI();

            return deviceInfo;
        };

        var getViewportSize = function (offsetWidth, offsetHeight) {
            var viewportSize = [document.documentElement.clientWidth,
                document.documentElement.clientHeight];

            if (offsetWidth) {
                viewportSize[0] = viewportSize[0] - offsetWidth;
            }

            if (offsetHeight) {
                viewportSize[1] = viewportSize[1] - offsetHeight;
            }

            return viewportSize;
        };

        var getPPI = function () {
            var elem = document.createElement('div');
            elem.style.width = '1in';
            document.body.appendChild(elem);
            var ppi = elem.offsetWidth;
            document.body.removeChild(elem);

            return ppi;
        };

        var getOrientation = function () {
            var orientationType = '';
            var portraitOrientationQuery = window.matchMedia('(orientation: portrait)');

            if (window.orientation !== undefined) {
                if (portraitOrientationQuery.matches) {
                    orientationType = 'portrait';
                } else {
                    orientationType = 'landscape';
                }
            }

            return orientationType;
        };

        return {
            detect: detect
        };
    }());

    return {
        collect: function () {
            return _DeviceInfoDetector.detect({ offsetHeight: 41 });
        }
    };
})();
